<?xml version="1.0" encoding="UTF-8"?>
<!--  
	搭建AoP的开发环境
		1、导入jar包
			导入AoP的四个基本jar包
			注意：
				Aop的运行是依赖与IoC的，所以还需要导入6个IoC的jar
		2、准备一个通知和连接点
			创建一个工具类(例如日志的通知)
			创建service接口和实现类
		3、创建spring的核心配置文件
			在src目录下创建一个bean.xml的核心配置文件
		4、在配置文件中导入名称空间
			ioc的名称空间和aop的名称空间
		5、把对象的创建交给spring容器
			把serviceImpl和utils交给spring容器来创建
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    	xmlns:aop="http://www.springframework.org/schema/aop"
    	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    						http://www.springframework.org/schema/beans/spring-beans.xsd
    						http://www.springframework.org/schema/aop 
    						http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 将service层的创建交给spring管理 -->
	<bean id="userService" class="frame.study.service.impl.UserServiceImpl"></bean>
	
	<!-- 将通知(工具类)交给spring管理 -->
	<bean id="logger" class="frame.study.utils.Logger"></bean>
	
	<!-- AoP的配置 -->
	<aop:config>
		
		<!-- 配置所有切面通用的切入点表达式 -->
		<aop:pointcut expression="execution(* frame.study.service.impl.*.*(..))" id="pt1"/>
		
		<!-- 配置切面：切面就是关心的某一个方面 
			id：指定的是通知的唯一标识
			ref：指定的通知的bean的id
		-->
		<aop:aspect id="loggerAdvice" ref="logger">
			<!-- 
				前置通知：永远在切入点方法执行之前执行
				它可以获取切入点方法的参数
			-->
			<!-- <aop:before method="beforePrintLog" pointcut-ref="pt1"/> -->
			
			<!--
				后置通知：切入点方法正确执行之后执行。它和例外通知只会有一个执行 
				它可以获取切入点方法的返回值
				除了在通知的方法中提供一个参数之外，还需要在配置文件中提供一个属性
				returning属性：指定的是后置通知中方法参数的变量名称，严格区分大小写
			-->
			<!-- <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1" returning="rtValue"/> -->
			<!-- 
				异常通知：切入点方法执行时产生异常后执行。它和后置通知只会有一个执行 
				除了在通知的方法中提供一个Throwable类型的参数之外，还需要在配置文件中提供一个属性
				throwing属性：指定的是例外通知中方法参数的变量名称。严格区分大小写。
			-->
			<!-- <aop:after-throwing method="afterThrowingprintLog" pointcut-ref="pt1" throwing="th"/> -->
			
			<!-- 最终通知：无论切入点方法是否正确执行了，它都会在最后执行   -->
			<!-- <aop:after method="printLog" pointcut-ref="pt1"/> -->
			
			<!-- 环绕通知：详情请见Logger类中的注释  -->
			<aop:around method="aroundPrintLog" pointcut-ref="pt1"/>
		</aop:aspect>
	</aop:config>
</beans>